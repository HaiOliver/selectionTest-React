{"ast":null,"code":"var _jsxFileName = \"D:\\\\Self-study\\\\React\\\\selection-test-react\\\\src\\\\components\\\\form-input-for-duck-fed\\\\inputForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DateTimePicker from 'react-datetime-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormInput() {\n  _s();\n\n  const [time_fed, onChangeTime] = useState(new Date());\n  const [location, setLocation] = useState(\"\");\n  const [numberDucks, setNumberDucks] = useState(\"\");\n  const [numberFoods, setNumberFoods] = useState(\"\");\n  const [foods, setFoods] = useState(\"\"); // ! Set field\n\n  const handleLocation = value => {\n    setLocation(value);\n  };\n\n  const handleFoods = value => {\n    setFoods(value);\n  };\n\n  const handleNumberDucks = value => {\n    if (isNaN(value)) {\n      alert(\"please input a number !!\");\n    }\n\n    setNumberDucks(value);\n  };\n\n  const handleNumberFoods = value => {\n    if (isNaN(value)) {\n      alert(\"please input a number !!\");\n    }\n\n    setNumberFoods(value);\n  }; // ! Handle Submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (location === \"\" || foods === \"\" || numberDucks === \"\" || numberFoods === \"\") {\n      alert(\"There is empty field. Please enter data !!\");\n      return;\n    }\n\n    console.log(\"date will be: \", time_fed.toISOString().slice(0, 10));\n    console.log(\"after slice time will be: \", time_fed.toISOString().slice(0, 24));\n    const data = {\n      location,\n      number_of_duck: numberDucks,\n      number_of_food: numberFoods,\n      time_fed: time_fed.toISOString(),\n      food: foods\n    };\n    console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 48 ~ handleSubmit ~ data\", data.time_fed.slice(0, 24)); // axios.post(\"/addNewPark\",data)\n    //       .then((response) => {\n    //                   console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 57 ~ .then ~ response\", response)\n    //                   alert(\"Park successfully added!\");\n    //                         })\n    //       .catch((error) => {\n    //                   console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 61 ~ handleSubmit ~ error\", error)\n    //                   alert('Sorry, park cannot be added. Network error.');\n    //                         })\n    // ? do post request here\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicLocation\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"text-left\",\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Location Park\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Type here ...\",\n        size: \"lg\",\n        onChange: e => handleLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicTime\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"text-left\",\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"What time the duck are fed ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-left\",\n        children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          onChange: onChangeTime,\n          value: time_fed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicDucks\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"text-left\",\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How many ducks are fed ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        size: \"lg\",\n        placeholder: \"Type here ...\",\n        onChange: e => handleNumberDucks(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicFoods\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"text-left\",\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"What food the duck are fed ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        size: \"lg\",\n        placeholder: \"Type here ...\",\n        onChange: e => handleFoods(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicNumberFoods\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"text-left\",\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How many food the duck are fed ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        size: \"lg\",\n        placeholder: \"Type here ...\",\n        onChange: e => handleNumberFoods(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}\n\n_s(FormInput, \"wYa4tWy5Fndqg/K4j65xQahQkPc=\");\n\n_c = FormInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"sources":["D:/Self-study/React/selection-test-react/src/components/form-input-for-duck-fed/inputForm.jsx"],"names":["React","useState","axios","Button","Form","DateTimePicker","FormInput","time_fed","onChangeTime","Date","location","setLocation","numberDucks","setNumberDucks","numberFoods","setNumberFoods","foods","setFoods","handleLocation","value","handleFoods","handleNumberDucks","isNaN","alert","handleNumberFoods","handleSubmit","e","preventDefault","console","log","toISOString","slice","data","number_of_duck","number_of_food","food","width","target"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nexport default function FormInput() {\r\n\r\n      const [time_fed, onChangeTime] = useState(new Date());\r\n      const [ location, setLocation] = useState(\"\")\r\n\r\n      const [ numberDucks, setNumberDucks] = useState(\"\")\r\n      const [ numberFoods, setNumberFoods] = useState(\"\")\r\n      const [ foods, setFoods] = useState(\"\")\r\n\r\n\r\n      // ! Set field\r\n      const handleLocation = (value) => {\r\n            setLocation(value)\r\n      }\r\n\r\n      const handleFoods = (value) => {\r\n            setFoods(value)\r\n      }\r\n\r\n      const handleNumberDucks = (value) => {\r\n            if(isNaN(value)){\r\n                  alert(\"please input a number !!\")\r\n            }\r\n\r\n            setNumberDucks(value)\r\n      }\r\n\r\n      const handleNumberFoods = (value) => {\r\n            if(isNaN(value)){\r\n                  alert(\"please input a number !!\")\r\n            }\r\n            setNumberFoods(value)\r\n      }\r\n\r\n      // ! Handle Submit\r\n      const handleSubmit = (e) => {\r\n            e.preventDefault()\r\n            if(location === \"\" || foods === \"\" || numberDucks === \"\" || numberFoods === \"\"  ){\r\n                  alert(\"There is empty field. Please enter data !!\")\r\n                  return\r\n            }\r\n\r\n            console.log(\"date will be: \", time_fed.toISOString().slice(0, 10));\r\n            console.log(\"after slice time will be: \", time_fed.toISOString().slice(0,24));\r\n            const data = {\r\n\r\n                  location,\r\n                  number_of_duck: numberDucks,\r\n                  number_of_food : numberFoods,\r\n                  time_fed: time_fed.toISOString(),\r\n                  food:foods\r\n                    };\r\n            console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 48 ~ handleSubmit ~ data\", data.time_fed.slice(0,24))\r\n\r\n            // axios.post(\"/addNewPark\",data)\r\n            //       .then((response) => {\r\n            //                   console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 57 ~ .then ~ response\", response)\r\n            //                   alert(\"Park successfully added!\");\r\n            //                         })\r\n            //       .catch((error) => {\r\n            //                   console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 61 ~ handleSubmit ~ error\", error)\r\n            //                   alert('Sorry, park cannot be added. Network error.');\r\n            //                         })\r\n\r\n            // ? do post request here\r\n      }\r\n\r\n\r\n\r\n      return (\r\n            <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formBasicLocation\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3>\r\n                                    Location Park\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n\r\n                              <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Type here ...\"\r\n                              size=\"lg\"\r\n                              onChange={ e => handleLocation(e.target.value)}\r\n                               />\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicTime\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3>\r\n                                    What time the duck are fed ?\r\n                              </h3>\r\n\r\n\r\n                        </Form.Label>\r\n\r\n                        <div className=\"text-left\" >\r\n                              <DateTimePicker\r\n                              onChange={onChangeTime}\r\n                              value={time_fed}\r\n\r\n                              />\r\n                        </div>\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicDucks\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3>\r\n                                    How many ducks are fed ?\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e =>  handleNumberDucks(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicFoods\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3>\r\n                                    What food the duck are fed ?\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e => handleFoods(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicNumberFoods\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3>\r\n                                       How many food the duck are fed ?\r\n                              </h3>\r\n\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e => handleNumberFoods(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"success\" type=\"submit\">\r\n                        Submit\r\n                  </Button>\r\n\r\n            </Form>\r\n      )\r\n}"]},"metadata":{},"sourceType":"module"}