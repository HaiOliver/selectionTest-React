{"ast":null,"code":"var _jsxFileName = \"D:\\\\Self-study\\\\React\\\\selection-test-react\\\\src\\\\pages\\\\list-all-parks-fed-duck\\\\list-parks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Park from '../../components/park/park';\nimport Col from 'react-bootstrap/Col';\nimport axios from \"axios\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListParks() {\n  _s();\n\n  const [parks, setParks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetch_data_from_DB = async () => {\n      let result = await axios.get('/allParks'); // ! set state for array Parks\n\n      setParks(result.data);\n      setLoading(false);\n    };\n\n    fetch_data_from_DB();\n  }, []); // ! render park in browser\n\n  console.log(parks);\n  const renderParks = parks.map((eachPark, indx) => {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \" p-3\",\n      children: /*#__PURE__*/_jsxDEV(Park, {\n        location: eachPark.location,\n        numberDucks: eachPark.number_of_duck,\n        time: eachPark.time_fed,\n        numberFoods: eachPark.number_of_food,\n        food: eachPark.food\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 43\n      }, this)\n    }, indx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All parks that fed ducks list below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/infoDuckFed\",\n        style: {\n          textDecoration: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          children: \"Add new Park\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: loading ? /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please wait .. !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this) :\n      /*#__PURE__*/\n      // <Row>\n      //       <Col  xs={12} md={3}>\n      //             <Park/>\n      //       </Col>\n      //       <Col xs={12} md={3}>\n      //             <Park/>\n      //       </Col>\n      //       <Col xs={12} md={3}>\n      //             <Park/>\n      //       </Col>\n      //       <Col xs={12} md={3}>\n      //             <Park/>\n      //       </Col>\n      // </Row>\n      _jsxDEV(Row, {\n        className: \"d-flex flex-row justify-content-center\",\n        children: renderParks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ListParks, \"rkSudsDXG968T1vLApIAXOeJnkw=\");\n\n_c = ListParks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListParks\");","map":{"version":3,"sources":["D:/Self-study/React/selection-test-react/src/pages/list-all-parks-fed-duck/list-parks.jsx"],"names":["React","useState","useEffect","Container","Row","Park","Col","axios","Spinner","Button","Link","ListParks","parks","setParks","loading","setLoading","fetch_data_from_DB","result","get","data","console","log","renderParks","map","eachPark","indx","location","number_of_duck","time_fed","number_of_food","food","textDecoration"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Park from '../../components/park/park';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from \"axios\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Link} from 'react-router-dom';\r\nexport default function ListParks() {\r\n      const [ parks, setParks] = useState([]);\r\n\r\n      const [loading, setLoading] = useState(true)\r\n\r\n      useEffect(() => {\r\n            const fetch_data_from_DB = async ()=>{\r\n            let result = await axios.get('/allParks');\r\n\r\n                  // ! set state for array Parks\r\n                  setParks(result.data)\r\n                  setLoading(false)\r\n            }\r\n\r\n            fetch_data_from_DB();\r\n\r\n      },[])\r\n\r\n\r\n      // ! render park in browser\r\n\r\n      console.log(parks);\r\n      const renderParks = parks.map((eachPark,indx) => {\r\n            return(\r\n                        <Col key = {indx} className=\" p-3\">\r\n                                          <Park\r\n                                                location = {eachPark.location}\r\n                                                numberDucks = {eachPark.number_of_duck}\r\n                                                time={eachPark.time_fed}\r\n                                                numberFoods = {eachPark.number_of_food}\r\n                                                food = {eachPark.food}\r\n\r\n                                          />\r\n                        </Col>\r\n                  )\r\n\r\n      })\r\n\r\n\r\n\r\n      return (\r\n            <Container >\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                              <h1>\r\n                               All parks that fed ducks list below\r\n                              </h1>\r\n\r\n                  </Row>\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                        <Link to=\"/infoDuckFed\" style={{textDecoration: \"none\"}}>\r\n                              <Button variant=\"info\">Add new Park</Button>\r\n                        </Link>\r\n                  </Row>\r\n                  <Row>\r\n\r\n                        {loading\r\n                        ? (\r\n                              <Container>\r\n                                    <h3>Please wait .. !</h3>\r\n                                    <Spinner animation=\"grow\" variant=\"primary\" />\r\n                                    <Spinner animation=\"grow\" variant=\"secondary\" />\r\n                                    <Spinner animation=\"grow\" variant=\"success\" />\r\n                                    <Spinner animation=\"grow\" variant=\"danger\" />\r\n                                    <Spinner animation=\"grow\" variant=\"warning\" />\r\n                                    <Spinner animation=\"grow\" variant=\"info\" />\r\n                                    <Spinner animation=\"grow\" variant=\"light\" />\r\n                                    <Spinner animation=\"grow\" variant=\"dark\" />\r\n                              </Container>\r\n\r\n                        )\r\n                        : (\r\n                              // <Row>\r\n                              //       <Col  xs={12} md={3}>\r\n                              //             <Park/>\r\n                              //       </Col>\r\n                              //       <Col xs={12} md={3}>\r\n                              //             <Park/>\r\n                              //       </Col>\r\n                              //       <Col xs={12} md={3}>\r\n                              //             <Park/>\r\n                              //       </Col>\r\n\r\n                              //       <Col xs={12} md={3}>\r\n                              //             <Park/>\r\n                              //       </Col>\r\n\r\n                              // </Row>\r\n                              <Row className = \"d-flex flex-row justify-content-center\">\r\n                                     {renderParks}\r\n                              </Row>\r\n\r\n\r\n\r\n\r\n                        )}\r\n                  </Row>\r\n\r\n\r\n\r\n\r\n            </Container>\r\n      )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}