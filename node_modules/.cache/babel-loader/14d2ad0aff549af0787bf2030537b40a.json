{"ast":null,"code":"import _slicedToArray from\"D:/Self-study/React/selection-test-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import axios from\"axios\";import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import DateTimePicker from'react-datetime-picker';import{useHistory}from\"react-router-dom\";import'./inputForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FormInput(){var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),time_fed=_useState2[0],onChangeTime=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),location=_useState4[0],setLocation=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),numberDucks=_useState6[0],setNumberDucks=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),numberFoods=_useState8[0],setNumberFoods=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),foods=_useState10[0],setFoods=_useState10[1];// ! Set field\nvar handleLocation=function handleLocation(value){setLocation(value);};var handleFoods=function handleFoods(value){setFoods(value);};var handleNumberDucks=function handleNumberDucks(value){if(isNaN(value)){alert(\"please input a number !!\");}setNumberDucks(value);};var handleNumberFoods=function handleNumberFoods(value){setNumberFoods(value);};var formatDate=function formatDate(time){var date_ob=time;// adjust 0 before single digit date\nvar date=(\"0\"+date_ob.getDate()).slice(-2);// current month\nvar month=(\"0\"+(date_ob.getMonth()+1)).slice(-2);// current year\nvar year=date_ob.getFullYear();// current hours\nvar hours=date_ob.getHours();// current minutes\nvar minutes=date_ob.getMinutes();// current seconds\nvar seconds=date_ob.getSeconds();return year+\"-\"+month+\"-\"+date+\" \"+hours+\":\"+minutes+\":\"+seconds;};var history=useHistory();// ! Handle Submit\nvar handleSubmit=function handleSubmit(e){e.preventDefault();// ! Check validation empty blank\nif(location===\"\"||foods===\"\"||numberDucks===\"\"||numberFoods===\"\"){alert(\"There is empty field. Please enter data !!\");return;}var data={location:location,number_of_duck:numberDucks,number_of_food:numberFoods,time_fed:formatDate(time_fed),food:foods};// ? do post request here\naxios.post(\"/addNewPark\",data).then(function(response){console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 57 ~ .then ~ response\",response);alert(\"Park successfully added!\");}).catch(function(error){console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 61 ~ handleSubmit ~ error\",error);alert('Sorry, park cannot be added. Network error.');});// ! redirect to Homepage\nvar path=\"/\";history.push(path);};return/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicLocation\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"text-left\",style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"h3\",{className:\"where\",children:\"Location Park\"})}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Type here ...\",size:\"lg\",onChange:function onChange(e){return handleLocation(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicTime\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"text-left\",style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"h3\",{className:\"time_fed\",children:\"What time the duck are fed ?\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-left\",children:/*#__PURE__*/_jsx(DateTimePicker,{onChange:onChangeTime,value:time_fed})})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicDucks\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"text-left\",style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"h3\",{className:\"numberDucksFed\",children:\"How many ducks are fed ?\"})}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",size:\"lg\",placeholder:\"Type here ...\",onChange:function onChange(e){return handleNumberDucks(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicFoods\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"text-left\",style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"h3\",{className:\"foodFedDuck\",children:\"What food the duck are fed ?\"})}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",size:\"lg\",placeholder:\"Type here ...\",onChange:function onChange(e){return handleFoods(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicNumberFoods\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"text-left\",style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"h3\",{className:\"howManyfood\",children:\"How many food the duck are fed ?\"})}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",size:\"lg\",placeholder:\"Type here ...\",onChange:function onChange(e){return handleNumberFoods(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{variant:\"success\",type:\"submit\",children:\"Add new location\"})]});}","map":{"version":3,"sources":["D:/Self-study/React/selection-test-react/src/components/form-input-for-duck-fed/inputForm.jsx"],"names":["React","useState","axios","Button","Form","DateTimePicker","useHistory","FormInput","Date","time_fed","onChangeTime","location","setLocation","numberDucks","setNumberDucks","numberFoods","setNumberFoods","foods","setFoods","handleLocation","value","handleFoods","handleNumberDucks","isNaN","alert","handleNumberFoods","formatDate","time","date_ob","date","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","history","handleSubmit","e","preventDefault","data","number_of_duck","number_of_food","food","post","then","response","console","log","catch","error","path","push","width","target"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './inputForm.css';\r\nexport default function FormInput() {\r\n\r\n      const [time_fed, onChangeTime] = useState(new Date());\r\n      const [ location, setLocation] = useState(\"\")\r\n\r\n      const [ numberDucks, setNumberDucks] = useState(\"\")\r\n      const [ numberFoods, setNumberFoods] = useState(\"\")\r\n      const [ foods, setFoods] = useState(\"\")\r\n\r\n\r\n      // ! Set field\r\n      const handleLocation = (value) => {\r\n            setLocation(value)\r\n      }\r\n\r\n      const handleFoods = (value) => {\r\n            setFoods(value)\r\n      }\r\n\r\n      const handleNumberDucks = (value) => {\r\n            if(isNaN(value)){\r\n                  alert(\"please input a number !!\")\r\n            }\r\n\r\n            setNumberDucks(value)\r\n      }\r\n\r\n      const handleNumberFoods = (value) => {\r\n\r\n            setNumberFoods(value)\r\n      }\r\n\r\n      const formatDate = (time) => {\r\n            let date_ob = time;\r\n\r\n            // adjust 0 before single digit date\r\n            let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n\r\n            // current month\r\n            let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n\r\n            // current year\r\n            let year = date_ob.getFullYear();\r\n\r\n            // current hours\r\n            let hours = date_ob.getHours();\r\n\r\n            // current minutes\r\n            let minutes = date_ob.getMinutes();\r\n\r\n            // current seconds\r\n            let seconds = date_ob.getSeconds();\r\n\r\n            return (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds)\r\n\r\n      }\r\n      const history = useHistory();\r\n      // ! Handle Submit\r\n      const handleSubmit = (e) => {\r\n            e.preventDefault()\r\n            // ! Check validation empty blank\r\n            if(location === \"\" || foods === \"\" || numberDucks === \"\" || numberFoods === \"\"  ){\r\n                  alert(\"There is empty field. Please enter data !!\")\r\n                  return\r\n            }\r\n\r\n            const data = {\r\n                  location,\r\n                  number_of_duck: numberDucks,\r\n                  number_of_food : numberFoods,\r\n                  time_fed: formatDate(time_fed),\r\n                  food:foods\r\n                    };\r\n\r\n            // ? do post request here\r\n            axios.post(\"/addNewPark\",data)\r\n                  .then((response) => {\r\n                              console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 57 ~ .then ~ response\", response)\r\n                              alert(\"Park successfully added!\");\r\n                                    })\r\n                  .catch((error) => {\r\n                              console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 61 ~ handleSubmit ~ error\", error)\r\n                              alert('Sorry, park cannot be added. Network error.');\r\n                                    })\r\n\r\n\r\n            // ! redirect to Homepage\r\n            let path = `/`;\r\n            history.push(path);\r\n      }\r\n\r\n\r\n\r\n      return (\r\n            <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formBasicLocation\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"where\">\r\n                                    Location Park\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n\r\n                              <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Type here ...\"\r\n                              size=\"lg\"\r\n                              onChange={ e => handleLocation(e.target.value)}\r\n                               />\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicTime\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"time_fed\">\r\n                                    What time the duck are fed ?\r\n                              </h3>\r\n\r\n\r\n                        </Form.Label>\r\n\r\n                        <div className=\"text-left\" >\r\n                              <DateTimePicker\r\n                              onChange={onChangeTime}\r\n                              value={time_fed}\r\n\r\n                              />\r\n                        </div>\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicDucks\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"numberDucksFed\">\r\n                                    How many ducks are fed ?\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e =>  handleNumberDucks(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicFoods\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"foodFedDuck\">\r\n                                    What food the duck are fed ?\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e => handleFoods(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicNumberFoods\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"howManyfood\">\r\n                                       How many food the duck are fed ?\r\n                              </h3>\r\n\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e => handleNumberFoods(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"success\" type=\"submit\">\r\n                        Add new location\r\n                  </Button>\r\n\r\n            </Form>\r\n      )\r\n}"]},"metadata":{},"sourceType":"module"}