{"ast":null,"code":"import _regeneratorRuntime from\"D:/Self-study/React/selection-test-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Self-study/React/selection-test-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Self-study/React/selection-test-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Park from'../../components/park/park';import Col from'react-bootstrap/Col';import axios from\"axios\";import{Link}from'react-router-dom';import'./list-parks.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ListParks(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),parks=_useState2[0],setParks=_useState2[1];useEffect(function(){var fetch_data_from_DB=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('/allParks');case 2:result=_context.sent;// ! set state for array Parks\nsetParks(result.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetch_data_from_DB(){return _ref.apply(this,arguments);};}();fetch_data_from_DB();},[]);// ! render park in browser\nvar renderParks=parks.map(function(eachPark,indx){return/*#__PURE__*/_jsx(Col,{className:\"p-3\",children:/*#__PURE__*/_jsx(Park,{location:eachPark.location,numberDucks:eachPark.number_of_duck,time:eachPark.time_fed,numberFoods:eachPark.number_of_food,food:eachPark.food,id:eachPark.id})},indx);});return/*#__PURE__*/_jsxs(Container,{fluid:true,children:[/*#__PURE__*/_jsx(Row,{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"big-header\",children:\"All locations for ducks-fed list below\"})}),/*#__PURE__*/_jsx(Row,{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(Link,{to:\"/infoDuckFed\",style:{textDecoration:\"none\"},children:/*#__PURE__*/_jsx(\"button\",{className:\"add-new-park\",children:\"Add new data\"})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Container,{className:\"d-flex flex-wrap align-items-lg-start align-content-center \",children:renderParks})})]});}export default/*#__PURE__*/React.memo(ListParks);","map":{"version":3,"sources":["D:/Self-study/React/selection-test-react/src/pages/list-all-parks-fed-duck/list-parks.jsx"],"names":["React","useState","useEffect","Container","Row","Park","Col","axios","Link","ListParks","parks","setParks","fetch_data_from_DB","get","result","data","renderParks","map","eachPark","indx","location","number_of_duck","time_fed","number_of_food","food","id","textDecoration","memo"],"mappings":"0dAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAwBC,SAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,4BAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAO,kBAAP,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,eACYR,QAAQ,CAAC,EAAD,CADpB,wCACPS,KADO,eACAC,QADA,eAEfT,SAAS,CAAC,UAAM,CACV,GAAMU,CAAAA,kBAAkB,0FAAG,oKACRL,CAAAA,KAAK,CAACM,GAAN,CAAU,WAAV,CADQ,QACvBC,MADuB,eAGrB;AACAH,QAAQ,CAACG,MAAM,CAACC,IAAR,CAAR,CAJqB,sDAAH,kBAAlBH,CAAAA,kBAAkB,0CAAxB,CAOAA,kBAAkB,GACvB,CATQ,CASP,EATO,CAAT,CAWA;AAEA,GAAMI,CAAAA,WAAW,CAAGN,KAAK,CAACO,GAAN,CAAU,SAACC,QAAD,CAAUC,IAAV,qBACZ,KAAC,GAAD,EAAkB,SAAS,CAAC,KAA5B,uBACkB,KAAC,IAAD,EACM,QAAQ,CAAID,QAAQ,CAACE,QAD3B,CAEM,WAAW,CAAIF,QAAQ,CAACG,cAF9B,CAGM,IAAI,CAAEH,QAAQ,CAACI,QAHrB,CAIM,WAAW,CAAIJ,QAAQ,CAACK,cAJ9B,CAKM,IAAI,CAAIL,QAAQ,CAACM,IALvB,CAMM,EAAE,CAAIN,QAAQ,CAACO,EANrB,EADlB,EAAYN,IAAZ,CADY,EAAV,CAApB,CAeA,mBACM,MAAC,SAAD,EAAW,KAAK,KAAhB,wBACM,KAAC,GAAD,EAAK,SAAS,CAAC,+BAAf,uBACY,WAAI,SAAS,CAAG,YAAhB,oDADZ,EADN,cAOM,KAAC,GAAD,EAAK,SAAS,CAAC,+BAAf,uBACM,KAAC,IAAD,EAAM,EAAE,CAAC,cAAT,CAAwB,KAAK,CAAE,CAACO,cAAc,CAAE,MAAjB,CAA/B,uBACM,eAAQ,SAAS,CAAC,cAAlB,0BADN,EADN,EAPN,cAYM,KAAC,GAAD,wBAEM,KAAC,SAAD,EAAW,SAAS,CAAG,6DAAvB,UACaV,WADb,EAFN,EAZN,GADN,CA0BL,CAGD,2BAAehB,KAAK,CAAC2B,IAAN,CAAWlB,SAAX,CAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Park from '../../components/park/park';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport './list-parks.css';\r\n\r\nfunction ListParks() {\r\n      const [ parks, setParks] = useState([]);\r\n      useEffect(() => {\r\n            const fetch_data_from_DB = async ()=>{\r\n            let result = await axios.get('/allParks');\r\n\r\n                  // ! set state for array Parks\r\n                  setParks(result.data)\r\n\r\n            }\r\n            fetch_data_from_DB();\r\n      },[])\r\n\r\n      // ! render park in browser\r\n\r\n      const renderParks = parks.map((eachPark,indx) =>\r\n                        <Col key = {indx} className=\"p-3\">\r\n                                          <Park\r\n                                                location = {eachPark.location}\r\n                                                numberDucks = {eachPark.number_of_duck}\r\n                                                time={eachPark.time_fed}\r\n                                                numberFoods = {eachPark.number_of_food}\r\n                                                food = {eachPark.food}\r\n                                                id = {eachPark.id}\r\n                                          />\r\n                        </Col>\r\n      )\r\n\r\n\r\n\r\n      return (\r\n            <Container fluid >\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                              <h1 className = \"big-header\">\r\n                                    All locations for ducks-fed list below\r\n                              </h1>\r\n\r\n                  </Row>\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                        <Link to=\"/infoDuckFed\" style={{textDecoration: \"none\"}}>\r\n                              <button className=\"add-new-park\">Add new data</button>\r\n                        </Link>\r\n                  </Row>\r\n                  <Row>\r\n\r\n                        <Container className = \"d-flex flex-wrap align-items-lg-start align-content-center \">\r\n                                    {renderParks}\r\n                        </Container>\r\n                        \r\n                  </Row>\r\n\r\n\r\n\r\n\r\n            </Container>\r\n      )\r\n}\r\n\r\n\r\nexport default React.memo(ListParks);"]},"metadata":{},"sourceType":"module"}