{"version":3,"sources":["components/park/park.jsx","pages/list-all-parks-fed-duck/list-parks.jsx"],"names":["Park","props","location","numberDucks","time","numberFoods","food","id","Card","className","body","outline","color","CardHeader","CardBody","CardTitle","Button","onClick","axios","delete","then","res","data","success","alert","window","reload","CardFooter","slice","React","memo","ListParks","useState","parks","setParks","useEffect","a","get","result","fetch_data_from_DB","renderParks","map","eachPark","indx","Col","number_of_duck","time_fed","number_of_food","Container","fluid","Row","to","style","textDecoration"],"mappings":"8SAQA,SAASA,EAAKC,GAAQ,IAGTC,EAAuDD,EAAvDC,SAAUC,EAA6CF,EAA7CE,YAAaC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,YAAaC,EAAaL,EAAbK,KAAMC,EAAON,EAAPM,GA0BvD,OACkB,eAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,MAAI,EAACC,SAAO,EAACC,MAAM,OAA3C,UACM,cAACC,EAAA,EAAD,UACM,cAAC,IAAD,CAAWJ,UAAU,iBAArB,SACM,4CACU,sBAAMA,UAAU,WAAhB,SAA4BP,WAK5C,eAACY,EAAA,EAAD,WAEM,cAACC,EAAA,EAAD,CAAYN,UAAU,uCAAtB,SACO,eAAC,IAAD,CAAWA,UAAU,iBAArB,UACD,2DAA6B,sBAAMA,UAAU,cAAhB,SAA+BN,IAA5D,OAEA,qDAAwB,sBAAMM,UAAU,OAAhB,SAAwBH,OAGhD,iDAAmB,sBAAMG,UAAU,cAAhB,SAA+BJ,YAGxD,cAACW,EAAA,EAAD,CAAQC,QA9CvB,WACfC,IAAMC,OAAN,0DAAgEZ,IACzDa,MAAK,SAAAC,GAEA,OADeA,EAAIC,QAGxBF,MAAK,SAAAE,GAEIA,EAAKC,SAEHC,MAAM,YAAD,OAAatB,EAAb,8DAELuB,OAAOvB,SAASwB,UAGhBF,MAAM,4BA+BM,uBAEZ,eAACG,EAAA,EAAD,CAAYlB,UAAU,qCAAtB,UACY,kDAAoB,sBAAMA,UAAU,OAAhB,SAAwBL,EAAKwB,MAAM,SACvD,kDAAoB,sBAAMnB,UAAU,OAAhB,SAAwBL,EAAKwB,MAAM,EAAE,eAYpFC,UAAMC,KAAK9B,G,sBClE1B,SAAS+B,IAAa,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,KAEfC,qBAAU,YACoB,uCAAG,4BAAAC,EAAA,sEACRlB,IAAMmB,IAAI,uDADF,OACvBC,EADuB,OAIrBJ,EAASI,EAAOhB,MAJK,2CAAH,qDAOxBiB,KACJ,IAIF,IAAMC,EAAcP,EAAMQ,KAAI,SAACC,EAASC,GAAV,OACZ,cAACC,EAAA,EAAD,CAAkBnC,UAAU,MAA5B,SACkB,cAAC,EAAD,CACMP,SAAYwC,EAASxC,SACrBC,YAAeuC,EAASG,eACxBzC,KAAMsC,EAASI,SACfzC,YAAeqC,EAASK,eACxBzC,KAAQoC,EAASpC,KACjBC,GAAMmC,EAASnC,MAP3BoC,MAc9B,OACM,eAACK,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACM,cAACC,EAAA,EAAD,CAAKzC,UAAU,gCAAf,SACY,oBAAIA,UAAY,aAAhB,sDAKZ,cAACyC,EAAA,EAAD,CAAKzC,UAAU,gCAAf,SACM,cAAC,IAAD,CAAM0C,GAAG,mCAAmCC,MAAO,CAACC,eAAgB,QAApE,SACM,wBAAQ5C,UAAU,eAAlB,8BAGZ,cAACyC,EAAA,EAAD,UAEM,cAACF,EAAA,EAAD,CAAWvC,UAAY,8DAAvB,SACa+B,SAatBX,cAAMC,KAAKC,I","file":"static/js/7.d1798b86.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n      Card, Button, CardHeader, CardFooter, CardBody, CardTitle, Container\r\n} from 'reactstrap';\r\nimport \"./park.css\"\r\n\r\nfunction Park(props) {\r\n\r\n\r\n      const {location, numberDucks, time, numberFoods, food, id } = props\r\n\r\n      const handleDelete = () => {\r\n            axios.delete(`https://react-selection-test.herokuapp.com/park/${id}`)\r\n                  .then(res => {\r\n                        let response = res.data;\r\n                        return response\r\n                  })\r\n                  .then(data => {\r\n\r\n                        if (data.success)\r\n                        {\r\n                              alert(`Location ${location} successfully deleted ! Page will automatically refresh !`)\r\n                              // ! redirect to Homepage\r\n                              window.location.reload();\r\n                        }\r\n                        else{\r\n                              alert('Sorry,Network error.');}\r\n                  });\r\n\r\n\r\n\r\n\r\n      }\r\n\r\n\r\n      return (\r\n                        <Card  className=\"park\" body outline color=\"info\">\r\n                              <CardHeader>\r\n                                    <Container className=\"title-location\">\r\n                                          <h4>\r\n                                          Location: <span className=\"location\">{location}</span>\r\n                                          </h4>\r\n                                    </Container>\r\n\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n\r\n                                          <CardTitle  className=\"d-flex align-items-start flex-column\">\r\n                                                 <Container className=\"container-info\">\r\n                                                <h5>Number of ducks are fed: <span className=\"numberDucks\">{numberDucks}</span> </h5>\r\n\r\n                                                <h5 >What kind of food: <span className=\"food\">{food}</span></h5>\r\n\r\n\r\n                                                <h5>How many food: <span className=\"numberFoods\">{numberFoods}</span></h5>\r\n                                                </Container>\r\n                                          </CardTitle>\r\n                                          <Button onClick = {handleDelete} >Delete</Button>\r\n                                    </CardBody>\r\n                              <CardFooter className=\"d-flex align-items-end flex-column\">\r\n                                          <p>Time created at: <span className=\"hour\">{time.slice(11,)}</span></p>\r\n                                          <p>Date created on: <span className=\"date\">{time.slice(0,10)}</span></p>\r\n\r\n                              </CardFooter>\r\n                        </Card>\r\n\r\n\r\n\r\n\r\n\r\n      )\r\n}\r\n\r\nexport default React.memo(Park);\r\n\r\n","import React,{useState, useEffect} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Park from '../../components/park/park';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport './list-parks.css';\r\n\r\nfunction ListParks() {\r\n      const [ parks, setParks] = useState([]);\r\n      useEffect(() => {\r\n            const fetch_data_from_DB = async ()=>{\r\n            let result = await axios.get('https://react-selection-test.herokuapp.com/allParks');\r\n\r\n                  // ! set state for array Parks\r\n                  setParks(result.data)\r\n\r\n            }\r\n            fetch_data_from_DB();\r\n      },[])\r\n\r\n      // ! render park in browser\r\n\r\n      const renderParks = parks.map((eachPark,indx) =>\r\n                        <Col key = {indx} className=\"p-3\">\r\n                                          <Park\r\n                                                location = {eachPark.location}\r\n                                                numberDucks = {eachPark.number_of_duck}\r\n                                                time={eachPark.time_fed}\r\n                                                numberFoods = {eachPark.number_of_food}\r\n                                                food = {eachPark.food}\r\n                                                id = {eachPark.id}\r\n                                          />\r\n                        </Col>\r\n      )\r\n\r\n\r\n\r\n      return (\r\n            <Container fluid >\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                              <h1 className = \"big-header\">\r\n                                    All locations for ducks-fed list below\r\n                              </h1>\r\n\r\n                  </Row>\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                        <Link to=\"/selectionTest-React/infoDuckFed\" style={{textDecoration: \"none\"}}>\r\n                              <button className=\"add-new-park\">Add new data</button>\r\n                        </Link>\r\n                  </Row>\r\n                  <Row>\r\n\r\n                        <Container className = \"d-flex flex-wrap align-items-lg-start align-content-center \">\r\n                                    {renderParks}\r\n                        </Container>\r\n\r\n                  </Row>\r\n\r\n\r\n\r\n\r\n            </Container>\r\n      )\r\n}\r\n\r\n\r\nexport default React.memo(ListParks);"],"sourceRoot":""}