{"version":3,"sources":["components/form-input-for-duck-fed/inputForm.jsx","pages/info-fed-duck-in-park/fed-duck.jsx"],"names":["FormInput","useState","Date","time_fed","onChangeTime","location","setLocation","numberDucks","setNumberDucks","numberFoods","setNumberFoods","foods","setFoods","formatDate","time","date_ob","date","getDate","slice","month","getMonth","getFullYear","getHours","getMinutes","getSeconds","history","useHistory","Form","onSubmit","e","preventDefault","data","number_of_duck","number_of_food","food","axios","post","then","response","console","log","alert","catch","error","push","Group","controlId","Label","className","style","width","Control","type","placeholder","size","onChange","value","target","isNaN","Button","variant","fedDuck","Container","Row","to","textDecoration"],"mappings":"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","file":"static/js/6.1fe4aedc.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './inputForm.css';\r\nexport default function FormInput() {\r\n\r\n      const [time_fed, onChangeTime] = useState(new Date());\r\n      const [ location, setLocation] = useState(\"\")\r\n\r\n      const [ numberDucks, setNumberDucks] = useState(\"\")\r\n      const [ numberFoods, setNumberFoods] = useState(\"\")\r\n      const [ foods, setFoods] = useState(\"\")\r\n\r\n\r\n      // ! Set field\r\n      const handleLocation = (value) => {\r\n            setLocation(value)\r\n      }\r\n\r\n      const handleFoods = (value) => {\r\n            setFoods(value)\r\n      }\r\n\r\n      const handleNumberDucks = (value) => {\r\n            if(isNaN(value)){\r\n                  alert(\"please input a number !!\")\r\n            }\r\n\r\n            setNumberDucks(value)\r\n      }\r\n\r\n      const handleNumberFoods = (value) => {\r\n\r\n            setNumberFoods(value)\r\n      }\r\n\r\n      const formatDate = (time) => {\r\n            let date_ob = time;\r\n\r\n            // adjust 0 before single digit date\r\n            let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n\r\n            // current month\r\n            let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n\r\n            // current year\r\n            let year = date_ob.getFullYear();\r\n\r\n            // current hours\r\n            let hours = date_ob.getHours();\r\n\r\n            // current minutes\r\n            let minutes = date_ob.getMinutes();\r\n\r\n            // current seconds\r\n            let seconds = date_ob.getSeconds();\r\n\r\n            return (year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds)\r\n\r\n      }\r\n      const history = useHistory();\r\n      // ! Handle Submit\r\n      const handleSubmit = (e) => {\r\n            e.preventDefault()\r\n            // ! Check validation empty blank\r\n            if(location === \"\" || foods === \"\" || numberDucks === \"\" || numberFoods === \"\"  ){\r\n                  alert(\"There is empty field. Please enter data !!\")\r\n                  return\r\n            }\r\n\r\n            const data = {\r\n                  location,\r\n                  number_of_duck: numberDucks,\r\n                  number_of_food : numberFoods,\r\n                  time_fed: formatDate(time_fed),\r\n                  food:foods\r\n                    };\r\n\r\n            // ? do post request here\r\n            axios.post(\"https://react-selection-test.herokuapp.com/addNewPark\",data)\r\n                  .then((response) => {\r\n                              console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 57 ~ .then ~ response\", response)\r\n                              alert(\"Park successfully added!\");\r\n                                    })\r\n                  .catch((error) => {\r\n                              console.log(\"ðŸš€ ~ file: inputForm.jsx ~ line 61 ~ handleSubmit ~ error\", error)\r\n                              alert('Sorry, Park cannot be added. Network error.');\r\n                                    })\r\n\r\n\r\n            // ! redirect to Homepage\r\n            let path = `/selectionTest-React`;\r\n            history.push(path);\r\n      }\r\n\r\n\r\n\r\n      return (\r\n            <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formBasicLocation\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"where\">\r\n                                    Location Park\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n\r\n                              <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"Type here ...\"\r\n                              size=\"lg\"\r\n                              onChange={ e => handleLocation(e.target.value)}\r\n                               />\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicTime\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"time_fed\">\r\n                                    What time the duck are fed ?\r\n                              </h3>\r\n\r\n\r\n                        </Form.Label>\r\n\r\n                        <div className=\"text-left\" >\r\n                              <DateTimePicker\r\n                              onChange={onChangeTime}\r\n                              value={time_fed}\r\n\r\n                              />\r\n                        </div>\r\n\r\n\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicDucks\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"numberDucksFed\">\r\n                                    How many ducks are fed ?\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e =>  handleNumberDucks(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicFoods\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"foodFedDuck\">\r\n                                    What food the duck are fed ?\r\n                              </h3>\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e => handleFoods(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicNumberFoods\">\r\n                        <Form.Label className=\"text-left\" style={{width: \"100%\"}}>\r\n                              <h3 className=\"howManyfood\">\r\n                                       How many food the duck are fed ?\r\n                              </h3>\r\n\r\n\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              placeholder=\"Type here ...\"\r\n                              onChange={ e => handleNumberFoods(e.target.value)}\r\n                              />\r\n                  </Form.Group>\r\n\r\n                  <Button variant=\"success\" type=\"submit\">\r\n                        Add new location\r\n                  </Button>\r\n\r\n            </Form>\r\n      )\r\n}","import React from 'react'\r\nimport FormInput from '../../components/form-input-for-duck-fed/inputForm'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './fed-duck.css';\r\nexport default function fedDuck() {\r\n      return (\r\n            <Container >\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                        <h1 className=\"another-title\"> Input your data about your duck fed activity </h1>\r\n                  </Row>\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                        <FormInput/>\r\n                  </Row>\r\n                  <Row className=\"d-flex justify-content-center m-3\">\r\n                        <Link to=\"/selectionTest-React\" style={{textDecoration: \"none\"}}>\r\n                              <Button variant=\"info\">See all locations</Button>\r\n                        </Link>\r\n                  </Row>\r\n            </Container>\r\n      )\r\n}\r\n"],"sourceRoot":""}